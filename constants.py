import numpy as np
DATA_PATH = '/home/apexmds/Desktop/pcm_phc_tr/Version 0.5.1/Data/output'
STORED_EXPERIMENT_PATH = '/home/apexmds/Desktop/pcm_phc_tr/Version 0.5.1/Machine Learning Module/Old_Experiment'
PARAM_PATH = 'X'
R_PATH = 'reflection'
T_PATH = 'transmission'
PATIENCE = 20
NUM_EPOCHS = 300
BATCH_SIZE = 250
TARGETS = ['T','R']
CLASSES = ['a','c','both']
DIRECTORIES = ['Results','Datasets']
PLOT_RESULT_DIMENSIONS = (16,4)
PLOT_RESULT_SUBPLOT = (4,5)
NUM_PLOTS = PLOT_RESULT_SUBPLOT[0]*PLOT_RESULT_SUBPLOT[1]
NUM_REFINEMENT = 3
LEN_EXPERIMENT = NUM_REFINEMENT+1
H_FIGURE_3=0.5 #Fixed Lambda
ANGLE_FIGURE_3 = 0
LAMBDA_MIN = 0.1 #Minimum value of Lambda
LAMBDA_MAX = 1.95 #Maximum value of Lambda
X_MIN = 0.05 #Minimum X
X_MAX = 0.5 #Maximum X
P_FIGURE_3 = ['s']
FIXED_FEATURES_C=[0,H_FIGURE_3,0,ANGLE_FIGURE_3,P_FIGURE_3,'c']
FIXED_FEATURES_A=[0,H_FIGURE_3,0,ANGLE_FIGURE_3,P_FIGURE_3,'a']
FIXED_FEATURES_BOTH=[0,H_FIGURE_3,0,ANGLE_FIGURE_3,P_FIGURE_3,'both']
#STRING_FEATURES_3 = [P_FIGURE_3,STATE_FIGURE_3]
#space_names = ['L','H','X','T','P','S']
NUM_X = 1000
NUM_LAMBDA = 1000
NUM_PARAM_SPACE = NUM_X*NUM_LAMBDA
NUM_FEATURES = len(FIXED_FEATURES_A)
LAMBDA_RANGE = np.linspace(LAMBDA_MIN,LAMBDA_MAX,NUM_LAMBDA)
START_I = LAMBDA_MIN*X_MIN
END_I = X_MAX
TOT_X_RANGE = np.arange(START_I,END_I+START_I,START_I)
NUM_PARAM_SPACE = NUM_X*len(TOT_X_RANGE)
INDEX_STRING_FEATURES_3 = [4,5]
X_PATH_NAME  = 'X.npy'
R_PATH_NAME = 'reflection.npy'
T_PATH_NAME = 'transmission.npy'
ACTIVATION_FUNCTION = 'relu'
OUTPUT_FILE_TYPE = '.npy'